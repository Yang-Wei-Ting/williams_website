name: Django CI/CD Workflow

on: [push]

jobs:
  Test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: ${{ secrets.POSTGRESQL_NAME }}
          POSTGRES_USER: ${{ secrets.POSTGRESQL_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRESQL_PASSWORD }}
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python 3
        uses: actions/setup-python@v3
        with:
          python-version: 3

      - name: Upgrade PIP and install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Run migrations, collect static files, and run tests
        run: |
          python manage.py migrate --run-syncdb
          python manage.py collectstatic
          python -m coverage run manage.py test --keepdb
          python -m coverage report -m
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          POSTGRESQL_NAME: ${{ secrets.POSTGRESQL_NAME }}
          POSTGRESQL_USER: ${{ secrets.POSTGRESQL_USER }}
          POSTGRESQL_PASSWORD: ${{ secrets.POSTGRESQL_PASSWORD }}
          POSTGRESQL_HOST: ${{ secrets.POSTGRESQL_HOST }}

  Deploy:
    runs-on: ubuntu-latest
    needs: [Test]
    if: ${{ github.ref == 'main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
